#!/bin/bash

# Script para configurar automáticamente un servidor DNS con BIND9
# Solicita los datos necesarios al usuario antes de proceder.

# Función para validar una dirección IP
validate_ip() {
    local ip=$1
    if [[ $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        return 0
    else
        return 1
    fi
}

# Solicitar datos al usuario
echo "Configuración del servidor DNS con BIND9"
read -p "Introduce la IP del servidor DNS (por ejemplo, 192.168.222.2): " server_ip
while ! validate_ip $server_ip; do
    read -p "IP no válida. Introduce una IP válida: " server_ip
done

read -p "Introduce la IP del router (por ejemplo, 192.168.222.1): " router_ip
while ! validate_ip $router_ip; do
    read -p "IP no válida. Introduce una IP válida: " router_ip
done

read -p "Introduce el nombre de dominio (por ejemplo, redesplus.es): " domain_name
read -p "¿Cuántos clientes deseas configurar? " num_clients

client_ips=()
client_names=()
for ((i=1; i<=$num_clients; i++)); do
    read -p "Introduce la IP del cliente $i (por ejemplo, 192.168.222.51): " client_ip
    while ! validate_ip $client_ip; do
        read -p "IP no válida. Introduce una IP válida: " client_ip
    done
    client_ips+=("$client_ip")

    read -p "Introduce el nombre del cliente $i (por ejemplo, cliente1): " client_name
    client_names+=("$client_name")
done

# 1. Instalación de BIND9 y herramientas necesarias
echo "Instalando BIND9 y resolvconf..."
apt update
apt install -y bind9 resolvconf

# 2. Configuración de Netplan (editar archivo original)
echo "Configurando Netplan..."
netplan_file=$(ls /etc/netplan/*.yaml | head -n 1)  # Obtiene el primer archivo YAML de Netplan
if [ -z "$netplan_file" ]; then
    echo "No se encontró ningún archivo de configuración de Netplan."
    exit 1
fi

# Editar el archivo Netplan existente
sed -i "/addresses:/d" $netplan_file  # Elimina líneas de addresses si existen
sed -i "/gateway4:/d" $netplan_file  # Elimina líneas de gateway4 si existen
sed -i "/nameservers:/d" $netplan_file  # Elimina líneas de nameservers si existen
sed -i "/dhcp4:/d" $netplan_file  # Elimina líneas de dhcp4 si existen

# Añadir configuración de red
cat <<EOF | tee -a $netplan_file > /dev/null
network:
  version: 2
  ethernets:
    enp0s3:
      dhcp4: false
      addresses:
        - $server_ip/24
      gateway4: $router_ip
      nameservers:
        addresses:
          - $server_ip
        search:
          - $domain_name
EOF

netplan try
netplan apply

# 3. Configuración de systemd-resolved (editar solo DNS y Domains)
echo "Configurando systemd-resolved..."
sed -i "/^DNS=/d" /etc/systemd/resolved.conf  # Elimina la línea DNS si existe
sed -i "/^Domains=/d" /etc/systemd/resolved.conf  # Elimina la línea Domains si existe

# Añadir configuración de DNS y Domains
cat <<EOF | tee -a /etc/systemd/resolved.conf > /dev/null
DNS=$server_ip
Domains=$domain_name
EOF

systemctl daemon-reload
systemctl restart systemd-networkd
systemctl restart systemd-resolved

rm -f /etc/resolv.conf
ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

# 4. Configuración del servicio de nombres (nsswitch.conf)
echo "Configurando nsswitch.conf..."
sed -i 's/^hosts:.*/hosts: dns files/' /etc/nsswitch.conf

# 5. Configuración de zonas DNS en BIND9
echo "Configurando zonas DNS en BIND9..."

# Crear zonas en named.conf.local
cat <<EOF > /etc/bind/named.conf.local
zone "$domain_name" {
    type master;
    file "/etc/bind/db.$domain_name";
};

zone "$(echo $server_ip | awk -F. '{print $3"."$2"."$1}').in-addr.arpa" {
    type master;
    file "/etc/bind/db.$(echo $server_ip | awk -F. '{print $3"."$2"."$1}')";
};
EOF

# Crear archivo de zona para el dominio (db.redesplus.es)
cat <<EOF > /etc/bind/db.$domain_name
; BIND data file for local loopback interface
;
\$TTL    604800
@       IN      SOA     servidor.$domain_name. root.$domain_name. (
                              2         ; Serial
                         604800         ; Refresh
                          86400         ; Retry
                        2419200         ; Expire
                         604800 )       ; Negative Cache TTL
;
@                         IN      NS      servidor.$domain_name.
servidor                  IN      A       $server_ip
clientel                  IN      A       ${client_ips[0]}
router                    IN      A       $router_ip
cliente2.$domain_name.    IN      A       ${client_ips[1]}
server                    IN      CNAME   servidor
EOF

# Crear archivo de zona para resolución inversa (db.222.168.192)
cat <<EOF > /etc/bind/db.$(echo $server_ip | awk -F. '{print $3"."$2"."$1}')
; BIND data file for local loopback interface
;
\$TTL    604800
@       IN      SOA     servidor.$domain_name. root.$domain_name. (
                              2         ; Serial
                         604800         ; Refresh
                          86400         ; Retry
                        2419200         ; Expire
                         604800 )       ; Negative Cache TTL
;
@       IN      NS      servidor.$domain_name.
2       IN      PTR     servidor.$domain_name.
51      IN      PTR     clientel.$domain_name.
1       IN      PTR     router.$domain_name.
52      IN      PTR     cliente2.$domain_name.
EOF

# 6. Verificación y reinicio del servicio DNS
echo "Verificando configuración de BIND9..."
named-checkconf /etc/bind/named.conf.local
named-checkzone $domain_name /etc/bind/db.$domain_name
named-checkzone $(echo $server_ip | awk -F. '{print $3"."$2"."$1}').in-addr.arpa /etc/bind/db.$(echo $server_ip | awk -F. '{print $3"."$2"."$1}')

echo "Reiniciando servicio BIND9..."
systemctl restart bind9
systemctl status bind9

# 7. Pruebas finales
echo "Realizando pruebas de resolución DNS..."
nslookup servidor.$domain_name
nslookup $server_ip
nslookup router.$domain_name

echo "¡Configuración del servidor DNS completada!"
